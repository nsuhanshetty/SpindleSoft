<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CancelToolStrip.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>267, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>