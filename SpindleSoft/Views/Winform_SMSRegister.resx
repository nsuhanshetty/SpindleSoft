<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripBtnSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAVsSURBVFhHvZeLT1NnGMbPv2Biss0s2WIWMzIRp4LCBgo4
        rlU3CmNAURRlsOGooEWmQHUI3mBOcM4Zl6noNMatc3jDBGTzgoJcCyicIkVbsBYRFQmIe/a9p4fSU1o1
        E32SHynne7/n93EOpYGzTc5x85z1R3oPqA71Nq7eb9apDpr58UDoYp3UTQ5RJ0320V5N/J4eLP7xHpbs
        fjVQ93LmIJeotSTraI9GUWhmQz1Y+tOrhRyKIjPIKcgzj/Z4xu2+iyW7zIh7TQgu5iQ3x55RccxOE7tI
        h3g2ikITotksEVv0YnucoWAdq5mbW7nPpI3e2c1uixMKuxFe0IWQPCMWF93B2sNmpB0wQ57fjQVbjIjc
        0eV433MgZzJzcyv23NVF/cBKmMieKFYekmvAr+V9GBx6Cvt0mIaw7re7CM0zIIZ+CAcdziDnV8zNJf5s
        4qO+NyKGyWyJLDAifPttPHg8LOqcp0Lbj8CcW4i263gW5CQ3t2yXgY8sMOCLHUYrkWwxZFMnhp78Kyos
        0XUP4s8rD3Cm5iEGBqV3pLzxkXAI255nQU5yCwf4fDvbmH/bSmiOHucaHorVlnyzrwvz1XosyNVDxpiX
        eRPF53vFVUsyiu8gbEunpMsZ5BQOEFdk4MO36xGRb0G+jUnyboqVliTvNTDpTevMCL7Z7eyO9IlTgKnv
        CfzV7WPmHEHOJczNxew08PItHYhgYmIhE20+bhIrgebOAfhl6qzrtoRv1cMvSydOWhJd0ImwzaN9ziAn
        ubnoglv8Z5vb2QULwRt5dmvviXXA/nKzcG1k3R6/zDY06R+L00DusS7IcnQOZ20hJ7k5eX4nvyhXh0/z
        2gUC1W3YX9Yj1gEH2QEC2LWRdXvmrWtFy63RAxSWmBC0gXc4aws5yc3Jc9v5RTlMsIltYgSrW6E+bBDr
        AN44AK81LdZ1WxZ+1wafjOvipCWbjhmEDkfztpCT3FwY+7Jg4w1W1iog23ADft+2iHWWKPeyX7iMFusM
        QXs8Uptwtkb6TpDntiFUPdrnDNpPbk6Ww/Oh6hYmvm5lbnoTjl8afQwU1S96zExpgE+6Ft4qLWatasAf
        djOPBobh+nU9QrKlfY4QnMzNybKb+eCsJrap2Qp976FswP3+IbHakp6+IZy9dg9/N46+9ezDG/vhkVKP
        wPXSTnvIQW4uOKuZD1zXiKD1WgmfZDTCK60OnaYBsfrFc6d3ELOVdZif0TCmdwRykpubv1bLB6ytQ0DG
        WPzT6+CWVI2NhzpgNDs+iK67X3wlDT0Oz1W18F1T67CbnOTmvFW1vL+qBn6qWsewAq+UakxPvIrZyVWQ
        b2hAmLqBFdRiWsIVuMRXQtvxSNRK82R4GF7KavikXhvTS05yc97KGt43rQq+adXPZW5qFbyVVwV8lFWY
        l8qurarC+0svQtsu/eywzZxkyx5pH3XV8JxHUiXvo6xkhVf+Nx+nVOK92H9Qr3sgKqUZfvoUMxIuCXOj
        +ypBbs498TL/0cpL8HpJPJMvYnJ0Gera7otaaZZvrYd74gXrPDndky7znNuyCt4zqQKeiS/P7C8r8E7E
        WdS1Sv84UT6ML4cHW7fOMye5OZfYcp1HQhncE8rHhVkryvB22Clc1ppFNbDtSBtcFKWSOXJOY25uSkyp
        dlb8OYwnM5edw7vyk1iYfgG+K89jSuRph3Pk5iZHlBbPiCvF9FfAVMUZuMaecbhGTnJzk2SnPV0Vp+DG
        Bt3YhtcCc5GT3MJ/R2+GntS4KUrgGnPqtUAucgrykbwR9JfGJfIEXKNLMDWqBB+MM9RJ3eSYyFyiVpoJ
        /ic8JwZoDk4K0jROkml0b8k0/HhAXdRJ3RP8f7fcdiEc9x9iWdzsGTwWuQAAAABJRU5ErkJggg==
</value>
  </data>
</root>